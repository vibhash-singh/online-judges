//High Speed prime number calculation

#include <iostream>

int main() {
		int arr[133] =  {2,3,5,7,11,13, 17, 19,23, 29, 31, 37, 41, 43, 47, 53, 59, 	61, 67, 71, 73, 79,	83, 89, 97 ,
		101, 131, 151, 181, 191, 313, 353, 373, 383, 727, 757, 787, 797, 919, 929, 10301, 10501, 10601, 11311, 11411, 
		12421, 12721, 12821, 13331, 13831, 13931, 14341, 14741, 15451, 15551, 16061, 16361, 16561, 16661, 17471, 17971,
		18181, 18481, 19391, 19891, 19991, 30103, 30203, 30403, 30703, 30803, 31013, 31513, 32323, 32423, 33533, 34543,
		34843, 35053, 35153, 35353, 35753, 36263, 36563, 37273, 37573, 38083, 38183, 38783, 39293, 70207, 70507, 70607,
		71317, 71917, 72227, 72727, 73037, 73237, 73637, 74047, 74747, 75557, 76367, 76667, 77377, 77477, 77977, 78487,
		78787, 78887, 79397, 79697, 79997, 90709, 91019, 93139, 93239, 93739, 94049, 94349, 94649, 94849, 94949, 95959,
		96269, 96469, 96769, 97379, 97579, 97879, 98389, 98689};
		
		long int num;
		long int p1, p2, p3;
		bool found = false;
		int i, j , k;
		
		std::cin >> num;
		
		while (num != 0) {
			found = false;
		
			for (i = 0; i < 133; i++ ) {
				for (j = 0; j <= 40; j++) {
					for (k = 0; k <= 25; k++) {
						if (arr[i] + arr[j] * arr[j] + arr[k] * arr[k] * arr[k] == num) {
							found = true;
							break;
						}
					}
					
					if (found == true) {
						break;
					}
				}
				
				if (found == true) {
					break;
				}
			}
			
			if (found == true) {
				std::cout << arr[i] << " " << arr[j] << " " << arr[k] << "\n";
			} else {
				std::cout << "0 " << "0 " << "0\n";
			}
			
			std::cin >> num;
		}
				
		return 0;
}
